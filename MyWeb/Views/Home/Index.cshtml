@using MyWeb.Models
@{
    ViewData["Title"] = "Сотрудники";
}
@model MyWeb.Models.IndexViewModel

<h1>@ViewData["Message"]</h1>

<a asp-action="CreateEmp" asp-controller="Home">
    <div class="form-group">
        <input type="button" value="Добавить сотрудника" class="btn btn-default" formaction="CreateEmp" />
    </div>
</a>

<form method="get">
    <div class="form-inline form-group">
        <label class="control-label">Имя: </label>
        @Html.TextBox("name",
        Model.FilterViewModel.SelectedName,
        htmlAttributes: new { @class = "form-control"})

        <label class="control-label">Компания: </label>
        @Html.DropDownList("company",
        Model.FilterViewModel.Companies as SelectList,
        htmlAttributes: new { @class = "form-control" })

        <input type="submit" value="Фильтрация" class="btn btn-default" />
    </div>
</form>

<table class="table">
    <tr>
        <th>
            <a  asp-action="Index" 
                asp-route-sortOrder="@(Model.SortViewModel.NameSort)" 
                asp-route-name="@(Model.FilterViewModel.SelectedName)" 
                asp-route-company="@(Model.FilterViewModel.SelectedCompany)" >
                Имя
            </a>
        </th>
        <th>
            <a  asp-action="Index" 
                asp-route-sortOrder="@(Model.SortViewModel.AgeSort)" 
                asp-route-name="@(Model.FilterViewModel.SelectedName)" 
                asp-route-company="@(Model.FilterViewModel.SelectedCompany)" >
                Возраст
            </a>
        </th>
        <th>
            <a  asp-action="Index" 
                asp-route-sortOrder="@(Model.SortViewModel.CompanySort)" 
                asp-route-name="@(Model.FilterViewModel.SelectedName)" 
                asp-route-company="@(Model.FilterViewModel.SelectedCompany)" >
                Компания
            </a>
        </th>
    </tr>
    @foreach (Emp e in Model.Emps)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => e.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => e.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => e.Company.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-controller="Home" asp-route-id="@e.Id">Изменить</a>
                <a asp-action="DeleteEmp" asp-controller="Home" asp-route-id="@e.Id">Удалить</a>
            </td>
        </tr>
    }

</table>

@if (Model.PageViewModel.HasPreviousPage)
{
    <a  asp-action="Index"
        asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
        asp-route-name="@(Model.FilterViewModel.SelectedName)" 
        asp-route-company="@(Model.FilterViewModel.SelectedCompany)"        
        asp-route-sortOrder="@(Model.SortViewModel.Current)" 
        class="btn btn-default">
            <i class="glyphicon glyphicon-chevron-left"></i>
            Назад
    </a>
}

@if (Model.PageViewModel.HasNextPage)
{
    <a  asp-action="Index"
        asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
        asp-route-name="@(Model.FilterViewModel.SelectedName)" 
        asp-route-company="@(Model.FilterViewModel.SelectedCompany)"        
        asp-route-sortOrder="@(Model.SortViewModel.Current)" 
        class="btn btn-default">
        <i class="glyphicon glyphicon-chevron-right"></i>
        Вперед
    </a>
}